To build the program, please run
>> make all

To do the test, please run
>> ./testall.sh
All the cpp files and executables are located in the TEST folder.


Updates:
  Type checking

  Type inference

  generating Intermediate Representation

  >> (current)
  generaing C++ code (to the screen)

Caution:
  Doesn't support closure yet. Source file containing closure leads to segment fault.
  No gabbage collector yet.

Record (for functionality)
  Type inference including tuple of variant length

  Generating C++ file: supporting recusive function call, function as first class object

Record (for developers)
  Treat all functions as unary ones in the C++ level.
  
  ?? handle this --> not supported since c is not function definition
  val rec a = lam (x: int): int -> int => let
    val f = lam (x: int) => x + 1
    val d = c
  in f end
  and c = a (1)

 
  ?? handle this --> not supported since c is not function definition
  val rec a = lam (x: int): int -> int => c
  and c = a (1)
   
